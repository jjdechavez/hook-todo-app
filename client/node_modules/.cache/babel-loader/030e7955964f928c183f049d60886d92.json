{"ast":null,"code":"var _jsxFileName = \"/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/Accessibility/mouse-pointerEvents.js\";\nimport React, { Component } from 'react';\n\nclass BlurExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.timeOutId = null;\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onBlurHandler = this.onBlurHandler.bind(this);\n    this.onFocusHandler = this.onFocusHandler.bind(this);\n  }\n\n  onClickHandler() {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  } // We close the popover on the next tick by using setTimeout.\n  // This is necessary because we need to first check if\n  // another child of the element has received focus as\n  // the blur event fires prior to the new focus event.\n\n\n  onBlurHandler() {\n    this.timeOutId = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    });\n  } // If a child receives focus, do not close the popover.\n\n\n  onFocusHandler() {\n    clearTimeout(this.timeOutId);\n  }\n\n  render() {\n    // React assists us by bubbling the blur and\n    // focus events to the parent.\n    return React.createElement(\"div\", {\n      onBlur: this.onBlurHandler,\n      onFocus: this.onFocusHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": this.state.isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Select an option\"), this.state.isOpen && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Option 3\")));\n  }\n\n}\n\nclass OuterClickExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = () => {\n      this.setState(currentState => ({\n        isOpen: !currentState.isOpen\n      }));\n    };\n\n    this.onClickOutsideHandler = event => {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({\n          isOpen: false\n        });\n      }\n    };\n\n    this.state = {\n      isOpen: false\n    };\n    this.toggleContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.onClickOutsideHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onClickOutsideHandler);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.toggleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Select an option\"), this.state.isOpen && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Option 3\")));\n  }\n\n}\n\nexport default BlurExample;","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/Accessibility/mouse-pointerEvents.js"],"names":["React","Component","BlurExample","constructor","props","state","isOpen","timeOutId","onClickHandler","bind","onBlurHandler","onFocusHandler","setState","currentState","setTimeout","clearTimeout","render","OuterClickExample","onClickOutsideHandler","event","toggleContainer","current","contains","target","createRef","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass BlurExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false };\n    this.timeOutId = null;\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onBlurHandler = this.onBlurHandler.bind(this);\n    this.onFocusHandler = this.onFocusHandler.bind(this);\n  }\n\n  onClickHandler() {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  }\n\n  // We close the popover on the next tick by using setTimeout.\n  // This is necessary because we need to first check if\n  // another child of the element has received focus as\n  // the blur event fires prior to the new focus event.\n  onBlurHandler() {\n    this.timeOutId = setTimeout(() => {\n      this.setState({\n        isOpen: false\n      });\n    });\n  }\n\n  // If a child receives focus, do not close the popover.\n  onFocusHandler() {\n    clearTimeout(this.timeOutId);\n  }\n\n  render() {\n    // React assists us by bubbling the blur and\n    // focus events to the parent.\n    return (\n      <div onBlur={this.onBlurHandler}\n           onFocus={this.onFocusHandler}>\n        <button onClick={this.onClickHandler}\n                aria-haspopup=\"true\"\n                aria-expanded={this.state.isOpen}>\n          Select an option\n        </button>\n        {this.state.isOpen && (\n          <ul>\n            <li>Option 1</li>\n            <li>Option 2</li>\n            <li>Option 3</li>\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nclass OuterClickExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false};\n    this.toggleContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.onClickOutsideHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onClickOutsideHandler);\n  }\n\n  onClickHandler = () => {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  }\n\n  onClickOutsideHandler = event => {\n    if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  render() {\n    return (\n      <div ref={this.toggleContainer}>\n        <button onClick={this.onClickHandler}>Select an option</button>\n        {this.state.isOpen && (\n          <ul>\n            <li>Option 1</li>\n            <li>Option 2</li>\n            <li>Option 3</li>\n          </ul>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BlurExample;"]},"metadata":{},"sourceType":"module"}