{"ast":null,"code":"import _slicedToArray from \"/home/jerald/Documents/playGround/Javascript/todo-app2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jerald/Documents/playGround/Javascript/todo-app2/src/context/TodoContext.js\";\nimport React, { createContext, useState, useReducer } from 'react';\nimport { todoReducer } from '../reducer/TodoReducer';\nimport { todosData } from '../data';\nexport const TodoContext = createContext();\n\nfunction TodoContextProvider(props) {\n  const initialFormState = {\n    id: null,\n    text: '',\n    completed: false\n  };\n  const initialState = {\n    todos: todosData,\n    editing: false,\n    currentTodo: initialFormState\n  }; // const [todos, dispatch] = useReducer(todoReducer, todosData);\n  // const [editing, setEditing] = useReducer(todoReducer, false);\n  // const [currentTodo, setCurrentTodo] = useReducer(todoReducer, initialFormState);\n\n  const _useReducer = useReducer(todoReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(TodoContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default TodoContextProvider;","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/context/TodoContext.js"],"names":["React","createContext","useState","useReducer","todoReducer","todosData","TodoContext","TodoContextProvider","props","initialFormState","id","text","completed","initialState","todos","editing","currentTodo","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,UAAxC,QAAyD,OAAzD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,SAAR,QAAwB,SAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEP,SAASM,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,QAAMC,gBAAgB,GAAG;AAACC,IAAAA,EAAE,EAAE,IAAL;AAAWC,IAAAA,IAAI,EAAE,EAAjB;AAAqBC,IAAAA,SAAS,EAAE;AAAhC,GAAzB;AACA,QAAMC,YAAY,GAAG;AAACC,IAAAA,KAAK,EAAET,SAAR;AAAmBU,IAAAA,OAAO,EAAE,KAA5B;AAAmCC,IAAAA,WAAW,EAAEP;AAAhD,GAArB,CAFkC,CAIlC;AACA;AACA;;AANkC,sBAORN,UAAU,CAACC,WAAD,EAAcS,YAAd,CAPF;AAAA;AAAA,QAO3BI,KAP2B;AAAA,QAOpBC,QAPoB;;AASlC,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,QADT,CADF;AAKD;;AAED,eAAeZ,mBAAf","sourcesContent":["import React, {createContext, useState, useReducer} from 'react';\nimport {todoReducer} from '../reducer/TodoReducer';\nimport {todosData} from '../data';\n\nexport const TodoContext = createContext();\n\nfunction TodoContextProvider(props) {\n  const initialFormState = {id: null, text: '', completed: false};\n  const initialState = {todos: todosData, editing: false, currentTodo: initialFormState};\n\n  // const [todos, dispatch] = useReducer(todoReducer, todosData);\n  // const [editing, setEditing] = useReducer(todoReducer, false);\n  // const [currentTodo, setCurrentTodo] = useReducer(todoReducer, initialFormState);\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n\n  return (\n    <TodoContext.Provider value={{state, dispatch}}>\n      {props.children}\n    </TodoContext.Provider>\n  )\n}\n\nexport default TodoContextProvider;"]},"metadata":{},"sourceType":"module"}