{"ast":null,"code":"import _defineProperty from \"/home/jerald/Documents/playGround/Javascript/todo-app2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/jerald/Documents/playGround/Javascript/todo-app2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/forms/EditTodoForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport { TodoContext } from '../../context/TodoContext';\n\nfunction AddTodoForm() {\n  const _useContext = useContext(TodoContext),\n        dispatch = _useContext.dispatch,\n        currentTodo = _useContext.state.currentTodo;\n\n  const _useState = useState(currentTodo),\n        _useState2 = _slicedToArray(_useState, 2),\n        editTodo = _useState2[0],\n        setEditTodo = _useState2[1];\n\n  console.log(editTodo, 'getCurrentTodo');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'UPDATE_TODO',\n      editTodo: {\n        id: editTodo.id,\n        text: editTodo.text\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setEditTodo(_objectSpread({}, editTodo, {\n      [name]: value\n    }));\n  };\n\n  const inputStyle = {\n    width: '99%',\n    margin: '0 auto'\n  };\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    style: inputStyle,\n    value: editTodo.text,\n    onChange: e => handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nexport default AddTodoForm;","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/forms/EditTodoForm.js"],"names":["React","useState","useContext","TodoContext","AddTodoForm","dispatch","currentTodo","state","editTodo","setEditTodo","console","log","handleSubmit","e","preventDefault","type","id","text","handleChange","event","target","name","value","inputStyle","width","margin"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;AAEA,SAASC,WAAT,GAAuB;AAAA,sBACsBF,UAAU,CAACC,WAAD,CADhC;AAAA,QACbE,QADa,eACbA,QADa;AAAA,QACKC,WADL,eACHC,KADG,CACKD,WADL;;AAAA,oBAEWL,QAAQ,CAACK,WAAD,CAFnB;AAAA;AAAA,QAEdE,QAFc;AAAA,QAEJC,WAFI;;AAGrBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,gBAAtB;;AAEA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAAC;AAACU,MAAAA,IAAI,EAAE,aAAP;AAAsBP,MAAAA,QAAQ,EAAC;AACtCQ,QAAAA,EAAE,EAAER,QAAQ,CAACQ,EADyB;AAEtCC,QAAAA,IAAI,EAAET,QAAQ,CAACS;AAFuB;AAA/B,KAAD,CAAR;AAID,GAND;;AAQA,QAAMC,YAAY,GAAGL,CAAC,IAAI;AAAA,0BACAM,KAAK,CAACC,MADN;AAAA,UAChBC,IADgB,iBAChBA,IADgB;AAAA,UACVC,KADU,iBACVA,KADU;AAGxBb,IAAAA,WAAW,mBAAMD,QAAN;AAAgB,OAACa,IAAD,GAAQC;AAAxB,OAAX;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAE,KADU;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GAAnB;AAKA,SACE;AAAM,IAAA,QAAQ,EAAEb,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEW,UAHT;AAIE,IAAA,KAAK,EAAEf,QAAQ,CAACS,IAJlB;AAKE,IAAA,QAAQ,EAAGJ,CAAD,IAAOK,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;AAED,eAAed,WAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport {TodoContext} from '../../context/TodoContext';\n\nfunction AddTodoForm() {\n  const { dispatch, state: {currentTodo} } = useContext(TodoContext);\n  const [editTodo, setEditTodo] = useState(currentTodo);\n  console.log(editTodo, 'getCurrentTodo')\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({type: 'UPDATE_TODO', editTodo:{\n      id: editTodo.id,\n      text: editTodo.text\n    }});\n  };\n\n  const handleChange = e => {\n    const { name, value } = event.target;\n\n    setEditTodo({ ...editTodo, [name]: value})\n  }\n\n  const inputStyle = {\n    width: '99%',\n    margin: '0 auto'\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type='text' \n        name='text'\n        style={inputStyle} \n        value={editTodo.text} \n        onChange={(e) => handleChange}\n      />\n    </form>\n  )\n}\n\nexport default AddTodoForm;"]},"metadata":{},"sourceType":"module"}