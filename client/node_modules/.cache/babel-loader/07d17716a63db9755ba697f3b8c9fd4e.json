{"ast":null,"code":"export const todoReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: Math.floor(Math.random() * 100 + 1),\n        text: action.todo,\n        completed: false\n      }];\n\n    case 'TOGGLE_TODO':\n      const completeTodo = state.map(todo => {\n        if (todo.id === action.id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return completeTodo;\n\n    case 'REMOVE_TODO':\n      return state.filter(todo => todo.id !== action.id);\n\n    case 'UPDATE_TODO':\n      const updateTodo = state.map(todo => {\n        if (todo.id === action.id) {}\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/reducer/TodoReducer.js"],"names":["todoReducer","state","action","type","id","Math","floor","random","text","todo","completed","completeTodo","map","filter","updateTodo"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAW;AAChBG,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CADY;AAEhBC,QAAAA,IAAI,EAAEN,MAAM,CAACO,IAFG;AAGhBC,QAAAA,SAAS,EAAE;AAHK,OAAX,CAAP;;AAKF,SAAK,aAAL;AACE,YAAMC,YAAY,GAAGV,KAAK,CAACW,GAAN,CAAUH,IAAI,IAAI;AACrC,YAAIA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAAvB,EAA2B;AACzBK,UAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,eAAOD,IAAP;AACD,OALoB,CAArB;AAMA,aAAOE,YAAP;;AACF,SAAK,aAAL;AACE,aAAOV,KAAK,CAACY,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAAxC,CAAP;;AACF,SAAK,aAAL;AACE,YAAMU,UAAU,GAAGb,KAAK,CAACW,GAAN,CAAUH,IAAI,IAAI;AACnC,YAAIA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAAvB,EAA2B,CAE1B;AACF,OAJkB,CAAnB;;AAKF;AACE,aAAOH,KAAP;AAxBJ;AA0BD,CA3BM","sourcesContent":["export const todoReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: Math.floor((Math.random() * 100) + 1),\n        text: action.todo,\n        completed: false\n      }];\n    case 'TOGGLE_TODO':\n      const completeTodo = state.map(todo => {\n        if (todo.id === action.id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return completeTodo;\n    case 'REMOVE_TODO':\n      return state.filter(todo => todo.id !== action.id);\n    case 'UPDATE_TODO':\n      const updateTodo = state.map(todo => {\n        if (todo.id === action.id) {\n          \n        }\n      })\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}