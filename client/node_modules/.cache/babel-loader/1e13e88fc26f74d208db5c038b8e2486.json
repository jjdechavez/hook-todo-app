{"ast":null,"code":"var _jsxFileName = \"/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/Accessibility/mouse-pointerEvents.js\";\nimport React, { Component } from 'react';\n\nclass OuterClickExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = () => {\n      this.setState(currentState => ({\n        isOpen: !currentState.isOpen\n      }));\n    };\n\n    this.onClickOutsideHandler = event => {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({\n          isOpen: false\n        });\n      }\n    };\n\n    this.state = {\n      isOpen: false\n    };\n    this.toggleContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.onClickOutsideHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onClickOutsideHandler);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.toggleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Select an option\"), this.state.isOpen && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Option 3\")));\n  }\n\n}\n\nexport default OuterClickExample;","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/Accessibility/mouse-pointerEvents.js"],"names":["React","Component","OuterClickExample","constructor","props","onClickHandler","setState","currentState","isOpen","onClickOutsideHandler","event","state","toggleContainer","current","contains","target","createRef","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,cAfmB,GAeF,MAAM;AACrB,WAAKC,QAAL,CAAcC,YAAY,KAAK;AAC7BC,QAAAA,MAAM,EAAE,CAACD,YAAY,CAACC;AADO,OAAL,CAA1B;AAGD,KAnBkB;;AAAA,SAqBnBC,qBArBmB,GAqBKC,KAAK,IAAI;AAC/B,UAAI,KAAKC,KAAL,CAAWH,MAAX,IAAqB,CAAC,KAAKI,eAAL,CAAqBC,OAArB,CAA6BC,QAA7B,CAAsCJ,KAAK,CAACK,MAA5C,CAA1B,EAA+E;AAC7E,aAAKT,QAAL,CAAc;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KAzBkB;;AAGjB,SAAKG,KAAL,GAAa;AAAEH,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKI,eAAL,GAAuBZ,KAAK,CAACgB,SAAN,EAAvB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKV,qBAAtC;AACD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoC,KAAKZ,qBAAzC;AACD;;AAcDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAE,KAAKV,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKP,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEG,KAAKM,KAAL,CAAWH,MAAX,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAHJ,CADF;AAYD;;AAzCuC;;AA4C1C,eAAeN,iBAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass OuterClickExample extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: false};\n    this.toggleContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.onClickOutsideHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.onClickOutsideHandler);\n  }\n\n  onClickHandler = () => {\n    this.setState(currentState => ({\n      isOpen: !currentState.isOpen\n    }));\n  }\n\n  onClickOutsideHandler = event => {\n    if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  render() {\n    return (\n      <div ref={this.toggleContainer}>\n        <button onClick={this.onClickHandler}>Select an option</button>\n        {this.state.isOpen && (\n          <ul>\n            <li>Option 1</li>\n            <li>Option 2</li>\n            <li>Option 3</li>\n          </ul>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default OuterClickExample;"]},"metadata":{},"sourceType":"module"}