{"ast":null,"code":"import _defineProperty from \"/home/jerald/Documents/playGround/Javascript/todo-app2/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const todoReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread({}, state, {\n        todos: [...state.todos, {\n          id: Math.floor(Math.random() * 100 + 1),\n          text: action.todo,\n          completed: false\n        }]\n      });\n\n    case 'TOGGLE_TODO':\n      const completeTodo = state.todos.map(todo => {\n        if (todo.id === action.id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n      return _objectSpread({}, state, {\n        todos: completeTodo\n      });\n\n    case 'REMOVE_TODO':\n      return _objectSpread({}, state, {\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      });\n\n    case 'EDIT_TODO':\n      return _objectSpread({}, state, {\n        editing: true,\n        currentTodo: action.todo\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/reducer/TodoReducer.js"],"names":["todoReducer","state","action","type","todos","id","Math","floor","random","text","todo","completed","completeTodo","map","filter","editing","currentTodo"],"mappings":";;;;;;AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB;AACtBC,UAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CADkB;AAEtBC,UAAAA,IAAI,EAAEP,MAAM,CAACQ,IAFS;AAGtBC,UAAAA,SAAS,EAAE;AAHW,SAAjB;AAFT;;AAQF,SAAK,aAAL;AACE,YAAMC,YAAY,GAAGX,KAAK,CAACG,KAAN,CAAYS,GAAZ,CAAgBH,IAAI,IAAI;AAC3C,YAAIA,IAAI,CAACL,EAAL,KAAYH,MAAM,CAACG,EAAvB,EAA2B;AACzBK,UAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,eAAOD,IAAP;AACD,OALoB,CAArB;AAMA,+BACKT,KADL;AAEEG,QAAAA,KAAK,EAAEQ;AAFT;;AAIF,SAAK,aAAL;AACE,+BACKX,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYU,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYH,MAAM,CAACG,EAA9C;AAFT;;AAIF,SAAK,WAAL;AACE,+BACKJ,KADL;AAEEc,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,WAAW,EAAEd,MAAM,CAACQ;AAHtB;;AAKF;AACE,aAAOT,KAAP;AAjCJ;AAmCD,CApCM","sourcesContent":["export const todoReducer = (state, action) => {\n  switch(action.type) {\n    case 'ADD_TODO':\n      return {\n        ...state,\n        todos: [...state.todos, {\n          id: Math.floor((Math.random() * 100) + 1),\n          text: action.todo,\n          completed: false\n        }]\n      };\n    case 'TOGGLE_TODO':\n      const completeTodo = state.todos.map(todo => {\n        if (todo.id === action.id) { \n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return {\n        ...state,\n        todos: completeTodo\n      };\n    case 'REMOVE_TODO':\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      }\n    case 'EDIT_TODO':\n      return {\n        ...state,\n        editing: true,\n        currentTodo: action.todo\n      }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}