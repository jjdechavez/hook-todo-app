{"ast":null,"code":"import _slicedToArray from \"/home/jerald/Documents/playGround/Javascript/todo-app2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jerald/Documents/playGround/Javascript/todo-app2/src/context/TodoContext.js\";\nimport React, { createContext, useState, useReducer } from 'react';\nimport { todoReducer } from '../reducer/TodoReducer';\nimport { todosData } from '../data';\nexport const TodoContext = createContext();\n\nfunction TodoContextProvider(props) {\n  const _useReducer = useReducer(todoReducer, todosData),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        todos = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        editing = _useState2[0],\n        setEditing = _useState2[1]; // const [isLoading, setLoading] = useState(true);\n\n\n  const updateTodo = id => {\n    const updateTodo = todos.map(todo => {\n      if (todo.id === id) {// setTodo('new')\n      }\n    });\n  };\n\n  return React.createElement(TodoContext.Provider, {\n    value: {\n      todos,\n      dispatch,\n      updateTodo\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.children);\n}\n\nexport default TodoContextProvider;","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/context/TodoContext.js"],"names":["React","createContext","useState","useReducer","todoReducer","todosData","TodoContext","TodoContextProvider","props","todos","dispatch","editing","setEditing","updateTodo","id","map","todo","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,UAAxC,QAAyD,OAAzD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,SAAR,QAAwB,SAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEP,SAASM,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,sBACRL,UAAU,CAACC,WAAD,EAAcC,SAAd,CADF;AAAA;AAAA,QAC3BI,KAD2B;AAAA,QACpBC,QADoB;;AAAA,oBAEJR,QAAQ,CAAC,KAAD,CAFJ;AAAA;AAAA,QAE3BS,OAF2B;AAAA,QAElBC,UAFkB,kBAGlC;;;AAEA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACvB,UAAMD,UAAU,GAAGJ,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB,CAClB;AACD;AACF,KAJkB,CAAnB;AAKD,GAND;;AAQA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACL,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBG,MAAAA;AAAlB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACS,QADT,CADF;AAKD;;AAED,eAAeV,mBAAf","sourcesContent":["import React, {createContext, useState, useReducer} from 'react';\nimport {todoReducer} from '../reducer/TodoReducer';\nimport {todosData} from '../data';\n\nexport const TodoContext = createContext();\n\nfunction TodoContextProvider(props) {\n  const [todos, dispatch] = useReducer(todoReducer, todosData);\n  const [editing, setEditing] = useState(false);\n  // const [isLoading, setLoading] = useState(true);\n\n  const updateTodo = id => {\n    const updateTodo = todos.map(todo => {\n      if (todo.id === id) {\n        // setTodo('new')\n      }\n    })\n  }\n\n  return (\n    <TodoContext.Provider value={{todos, dispatch, updateTodo}}>\n      {props.children}\n    </TodoContext.Provider>\n  )\n}\n\nexport default TodoContextProvider;"]},"metadata":{},"sourceType":"module"}