{"ast":null,"code":"var _jsxFileName = \"/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/TodoItem.js\";\nimport React, { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\n\nfunction TodoItem({\n  todo\n}) {\n  const todoItemStyle = {\n    background: '#ccc',\n    padding: '5px 5px',\n    width: '100%',\n    borderBottom: '1px dotted #fff',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'space-around'\n  };\n  const deleteBtnStyle = {\n    height: '2rem',\n    background: 'red',\n    borderRadius: '50%'\n  };\n\n  const _useContext = useContext(TodoContext),\n        toggleTodo = _useContext.toggleTodo;\n\n  return React.createElement(\"div\", {\n    className: \"todo-item\",\n    style: todoItemStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => toggleTodo(todo.id),\n    style: {\n      marginRight: '.75rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      textDecoration: todo.completed ? 'line-through' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, todo.text)), React.createElement(\"button\", {\n    style: deleteBtnStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"X\"));\n}\n\nexport default TodoItem;","map":{"version":3,"sources":["/home/jerald/Documents/playGround/Javascript/todo-app2/src/components/TodoItem.js"],"names":["React","useContext","TodoContext","TodoItem","todo","todoItemStyle","background","padding","width","borderBottom","display","alignItems","flexDirection","deleteBtnStyle","height","borderRadius","toggleTodo","id","marginRight","textDecoration","completed","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AACxB,QAAMC,aAAa,GAAG;AACpBC,IAAAA,UAAU,EAAE,MADQ;AAEpBC,IAAAA,OAAO,EAAE,SAFW;AAGpBC,IAAAA,KAAK,EAAE,MAHa;AAIpBC,IAAAA,YAAY,EAAE,iBAJM;AAKpBC,IAAAA,OAAO,EAAE,MALW;AAMpBC,IAAAA,UAAU,EAAE,QANQ;AAOpBC,IAAAA,aAAa,EAAE;AAPK,GAAtB;AASA,QAAMC,cAAc,GAAE;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBR,IAAAA,UAAU,EAAE,KAFQ;AAGpBS,IAAAA,YAAY,EAAE;AAHM,GAAtB;;AAVwB,sBAeHd,UAAU,CAACC,WAAD,CAfP;AAAA,QAejBc,UAfiB,eAejBA,UAfiB;;AAgBxB,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAEX,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAE,MAAMW,UAAU,CAACZ,IAAI,CAACa,EAAN,CAAjD;AAA4D,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAEf,IAAI,CAACgB,SAAL,GAAiB,cAAjB,GAAkC;AAAnD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IAAI,CAACiB,IADR,CAFF,CADF,EAOE;AAAQ,IAAA,KAAK,EAAER,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAWD;;AAED,eAAeV,QAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {TodoContext} from '../context/TodoContext';\n\nfunction TodoItem({todo}) {\n  const todoItemStyle = {\n    background: '#ccc',\n    padding: '5px 5px',\n    width: '100%',\n    borderBottom: '1px dotted #fff',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'space-around'\n  };\n  const deleteBtnStyle ={\n    height: '2rem',\n    background: 'red',\n    borderRadius: '50%',\n  }\n  const {toggleTodo} = useContext(TodoContext);\n  return (\n    <div className='todo-item' style={todoItemStyle}>\n      <div>\n        <input type='checkbox' onChange={() => toggleTodo(todo.id)} style={{marginRight: '.75rem' }} />\n        <p style={{textDecoration: todo.completed ? 'line-through' : ''}}>\n          {todo.text}\n        </p>\n      </div>\n      <button style={deleteBtnStyle}>X</button>\n    </div>\n  )\n}\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}